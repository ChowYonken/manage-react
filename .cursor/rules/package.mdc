---
alwaysApply: true
description: 项目主要的技术栈
---

基于对项目配置文件的分析，这个React项目使用了以下技术栈：

## 🚀 核心技术栈

### **前端框架**

- **React 18.3.1** - 现代React框架
- **TypeScript 5.6.2** - 类型安全的JavaScript超集

### **构建工具**

- **Vite 6.0.1** - 现代化的前端构建工具，提供快速的开发体验
- **pnpm** - 包管理器（从pnpm-lock.yaml可以看出）

### **UI组件库**

- **Ant Design 5.23.0** - 企业级UI组件库
- **@ant-design/icons 5.x** - Ant Design图标库

### **状态管理**

- **Redux Toolkit 2.8.2** - Redux官方推荐的状态管理工具
- **React Redux 9.2.0** - React与Redux的绑定库
- **Redux Persist 6.0.0** - Redux状态持久化

### **路由管理**

- **React Router DOM 7.1.1** - React路由管理

### **HTTP请求**

- **Axios 1.7.9** - HTTP客户端库

### **样式解决方案**

- **Less 4.3.0** - CSS预处理器
- **Styled Components 6.1.14** - CSS-in-JS解决方案

### **工具库**

- **ahooks 3.8.5** - React Hooks库
- **nprogress 0.2.0** - 进度条组件

## 🛠️ 开发工具

### **代码质量**

- **ESLint 9.15.0** - 代码检查工具
- **Prettier 3.4.2** - 代码格式化工具
- **TypeScript ESLint 8.15.0** - TypeScript的ESLint规则

### **开发体验**

- **ESLint插件**：
  - `eslint-plugin-react-hooks` - React Hooks规则
  - `eslint-plugin-react-refresh` - React热重载规则

## 📁 项目架构特点

- **模块化设计** - 使用TypeScript的模块系统
- **路径别名** - 配置了`@`指向`src`目录
- **环境配置** - 支持多环境配置
- **代理配置** - 开发环境API代理
- **Less变量** - 全局Less变量支持

这是一个现代化的React + TypeScript + Ant Design的管理后台项目，采用了当前主流的技术栈组合。
